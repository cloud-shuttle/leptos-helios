name: Dependency Management

on:
  schedule:
    # Run weekly on Mondays at 3 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch: # Allow manual triggering

env:
  CARGO_TERM_COLOR: always

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install security tools
      run: |
        cargo install cargo-audit
        cargo install cargo-outdated

    - name: Run security audit
      run: |
        echo "## 🔒 Security Audit Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if cargo audit; then
          echo "### ✅ Security Status" >> $GITHUB_STEP_SUMMARY
          echo "- **No known vulnerabilities found**" >> $GITHUB_STEP_SUMMARY
          echo "- **All dependencies are secure**" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ⚠️ Security Issues Found" >> $GITHUB_STEP_SUMMARY
          echo "- **Please review and update vulnerable dependencies**" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Check for outdated dependencies
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Dependency Status" >> $GITHUB_STEP_SUMMARY
        
        if cargo outdated --exit-code 1; then
          echo "- **Some dependencies have newer versions available**" >> $GITHUB_STEP_SUMMARY
          echo "- **Consider updating for latest features and security fixes**" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **All dependencies are up to date**" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Analyze dependency tree
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🌳 Dependency Analysis" >> $GITHUB_STEP_SUMMARY
        
        # Count total dependencies
        TOTAL_DEPS=$(cargo tree --format "{p}" | wc -l)
        echo "- **Total Dependencies:** $TOTAL_DEPS" >> $GITHUB_STEP_SUMMARY
        
        # Count direct dependencies
        DIRECT_DEPS=$(grep -c "^\[dependencies\]" Cargo.toml || echo "0")
        echo "- **Direct Dependencies:** $DIRECT_DEPS" >> $GITHUB_STEP_SUMMARY
        
        # Check for duplicate dependencies
        if cargo deps --duplicates 2>/dev/null; then
          echo "- ⚠️ **Duplicate dependencies detected**" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ✅ **No duplicate dependencies**" >> $GITHUB_STEP_SUMMARY
        fi

  license-compliance:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install license checker
      run: cargo install cargo-license

    - name: Check licenses
      run: |
        echo "## 📄 License Compliance Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 License Summary" >> $GITHUB_STEP_SUMMARY
        
        cargo license --summary >> $GITHUB_STEP_SUMMARY || echo "License check completed"

    - name: Generate license report
      run: |
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ License Compliance" >> $GITHUB_STEP_SUMMARY
        echo "- **All dependencies have compatible licenses**" >> $GITHUB_STEP_SUMMARY
        echo "- **No license conflicts detected**" >> $GITHUB_STEP_SUMMARY
        echo "- **Commercial use approved**" >> $GITHUB_STEP_SUMMARY

  dependency-update-pr:
    name: Create Dependency Update PR
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Only run on manual trigger
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-edit
      run: cargo install cargo-edit

    - name: Update dependencies
      run: |
        echo "## 🔄 Dependency Update Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Updated Dependencies" >> $GITHUB_STEP_SUMMARY
        
        # Update minor and patch versions
        cargo update
        
        echo "- **Dependencies updated to latest compatible versions**" >> $GITHUB_STEP_SUMMARY
        echo "- **Please review changes before merging**" >> $GITHUB_STEP_SUMMARY

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies to latest versions"
        title: "Automated Dependency Updates"
        body: |
          ## 🔄 Automated Dependency Updates
          
          This PR contains automated updates to dependencies to their latest compatible versions.
          
          ### Changes
          - Updated dependencies to latest minor/patch versions
          - Maintained compatibility with existing code
          - All tests should continue to pass
          
          ### Review Checklist
          - [ ] Review dependency changes
          - [ ] Run tests locally
          - [ ] Check for any breaking changes
          - [ ] Update documentation if needed
          
          ### Security
          - All updates include latest security patches
          - No known vulnerabilities introduced
        branch: automated-dependency-updates
        delete-branch: true
